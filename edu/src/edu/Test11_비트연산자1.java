package edu;

public class Test11_비트연산자1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		//4byte의 2진수를 표현하는 예제
		//1byte = 8bit, 4byte = 32bit
		//2진수(1,0)가 32개 나열됨
		//양수 비트값 --> 음수비트값으로 바꾸는 방법 0으로 시작하는 2진수(양수), 1로 시작하는 2진수(음수)
		//0은 1로, 1은 0으로 모두 바꾸고 나서 --> 맨 오른쪽 칸에 1을 더하면서 왼쪽으로 올려주면 됨
		//양수의 2진수값 1,0들을 서로 뒤집어 바꾼 뒤, +1 해주면 되므로
		// int x = 12; 
		// int y = (~x) +1; 로 코드작성하는 것과 똑같다.
		// y값은 -12 출력 저장됨
		int a = 0b00000000000000000000000000001100; //2진수로 적을 때, 0b로 시작하고 비트값 기재할 것
		int b = 0b11111111111111111111111111110100;
		
		System.out.println(a); //10진수로 출력됨 --> 12(양수)
		System.out.println(b); //10진수로 출력됨 --> -12(음수)
	}

}


/* 2진수 10진수로 변환방법

	1011(2진수)를 10진수로 바꾸면?
	ㄴ가장 오른쪽 숫자부터 2의 거듭제곱을 순서대로 2진수와 곱해서 나온 수를 모두 더한 값 = 10진수
 	ㄴ1*1 + 1*2 + 0*4 + 1*8 = 1+2+0+8 = 11(십진수)

	1100(2진수)를 10진수로 바꾸면?
	ㄴ0*1 + 0*2 + 1*4 + 1*8 = 0+0+4+8 = 12(십진수)
	
	00001100(양의 2진수)를 음의 2진수로 바꾸려면?
	ㄴ(전체) 0을 1로, 1을 0으로 바꿈 --> 11110011
	ㄴ맨 오른쪽 끝자리에 1을 더해서 하나씩 올라옴 --> 0 > 0 > 1 > 0 > 1 > 1 > 1 > 1 
	ㄴ숫자들을 좌우로 뒤집음 --> 11110100(음의 2진수) 완성
	

*/
